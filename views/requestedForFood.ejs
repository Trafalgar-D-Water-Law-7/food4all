<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>PlateShare - Requested For Food</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <%- include('config/export') %>
        <style>
            .modal-backdrop.show {
                background-color: rgba(0, 0, 0, 0.5);
            }

            .location-alert {
                background-color: #e0f7fa;
                color: #006064;
                padding: 10px;
                border-radius: 5px;
                margin-top: 10px;
            }

            .donors-list {
                margin-top: 10px;
                background: #f1f1f1;
                padding: 8px;
                border-radius: 5px;
            }
        </style>
</head>

<body>
    <div class="container-xxl bg-white p-0">
        <%- include('config/nav') %>

            <div class="container-xxl py-5 bg-dark hero-header mb-5">
                <div class="container text-center my-5 pt-5 pb-4">
                    <h1 class="display-3 text-white mb-3 animated slideInDown">Fill The Request</h1>
                </div>
            </div>

            <div class="container">
                <h2 class="text-center mb-4">Available Food Requests</h2>
                <div class="row g-4">
                    <% requests.forEach(request=> { %>
                        <div class="col-md-4">
                            <div class="card h-100 shadow-sm request-card" data-lat="<%= request.latitude %>"
                                data-lng="<%= request.longitude %>">
                                <img src="/<%= request.user.photo %>" class="card-img-top"
                                    alt="<%= request.subject || 'Food Request' %>">

                                <div class="card-body d-flex flex-column justify-content-between">
                                    <div>
                                        <h5 class="card-title text-primary">
                                            <%= request.subject || request.user.name %>
                                        </h5>
                                        <p class="card-text small text-muted">
                                            <%= request.message?.length> 100 ? request.message.substring(0, 100) + '...'
                                                : request.message || 'No description provided' %>
                                        </p>
                                        <p class="text-muted small">
                                            ‚è≥ Requested <span class="timeago"
                                                data-time="<%= request.createdAt.toISOString() %>"></span> |
                                            <span class="distance-display">üìç Calculating...</span>
                                        </p>
                                    </div>

                                    <div class="d-flex gap-2 mt-3">
                                        <button class="btn btn-sm btn-primary w-50"
                                            onclick="showRequestDetails('<%= request._id %>')">Details</button>
                                        <a href="https://www.google.com/maps/dir/?api=1&destination=<%= request.latitude %>,<%= request.longitude %>"
                                            target="_blank" class="btn btn-sm btn-outline-success w-50">Directions</a>
                                    </div>

                                    <% if (!session.userId) { %>
                                        <a href="/users/login" class="btn btn-sm btn-secondary w-100 mt-2">Login to
                                            Donate</a>

                                        <% } else if (request.user._id.toString()===session.userId.toString()) { %>
                                            <!-- No button shown if it's the user's own request -->

                                            <% } else if (request.wantToDonate.includes(session.userId)) { %>
                                                <button class="btn btn-sm btn-outline-success w-100 mt-2" disabled>‚úÖ
                                                    You‚Äôve already donated</button>

                                                <% } else if (request.wantToDonate.length>= 5) { %>
                                                    <button class="btn btn-sm btn-danger w-100 mt-2" disabled>üö´ Max
                                                        donation limit reached</button>

                                                    <% } else { %>
                                                        <button class="btn btn-sm btn-warning w-100 mt-2"
                                                            onclick="showDonationForm('<%= request._id %>')">
                                                            I Want to Donate
                                                        </button>
                                                        <% } %>
                                </div>
                            </div>
                        </div>

                        <!-- Donation Modal -->
                        <div class="modal fade" id="donationModal-<%= request._id %>" tabindex="-1" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content shadow-sm">
                                    <form action="/request/i-want-to-donate" method="POST"
                                        onsubmit="return validateDonationForm('<%= request._id %>')">
                                        <input type="hidden" name="requestId" value="<%= request._id %>">
                                        <input type="hidden" id="latitude-<%= request._id %>" name="latitude">
                                        <input type="hidden" id="longitude-<%= request._id %>" name="longitude">

                                        <div class="modal-header">
                                            <h5 class="modal-title">üç± Offer Food Donation</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>

                                        <div class="modal-body">
                                            <div class="mb-3">
                                                <label class="form-label">üìç Your Address</label>
                                                <input type="text" name="address" class="form-control" required>
                                            </div>
                                            <div class="mb-3">
                                                <label class="form-label">üìù Message</label>
                                                <textarea name="message" class="form-control" rows="3"
                                                    required></textarea>
                                            </div>
                                            <div class="location-alert text-center small">üìå Your location will be
                                                captured automatically.</div>
                                        </div>

                                        <div class="modal-footer">
                                            <button type="submit" class="btn btn-success w-100">Send Donation
                                                Offer</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <!-- Request Detail Modal -->
                        <div class="modal fade" id="requestDetailModal-<%= request._id %>" tabindex="-1"
                            aria-labelledby="requestDetailModalLabel-<%= request._id %>" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content border-0 shadow">
                                    <div class="modal-header bg-light">
                                        <h5 class="modal-title fw-semibold text-primary"
                                            id="requestDetailModalLabel-<%= request._id %>">ü•ó Food Request Details</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>

                                    <div class="modal-body">
                                        <div class="mb-3">
                                            <strong class="text-dark">From:</strong>
                                            <span class="ms-1 text-muted">
                                                <%= request.user.name %>
                                            </span>
                                        </div>

                                        <div class="mb-3">
                                            <strong class="text-dark">Message:</strong>
                                            <p class="text-muted mb-0">
                                                <%= request.message %>
                                            </p>
                                        </div>

                                        <div class="mb-3">
                                            <strong class="text-dark">Address:</strong>
                                            <p class="text-muted mb-0">
                                                <%= request.address %>
                                            </p>
                                        </div>

                                        <div>
                                            <strong class="text-dark">Requested:</strong>
                                            <span class="text-muted">
                                                <%= request.timeAgo %>
                                            </span>
                                        </div>
                                    </div>

                                    <div class="modal-footer bg-light">
                                        <button type="button" class="btn btn-secondary"
                                            data-bs-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <% }) %>
                </div>

            </div>


    </div>







    <%- include('config/footer') %>
        <script>
            // Show full request details in a modal
            function showRequestDetails(id) {
                const modal = new bootstrap.Modal(document.getElementById('requestDetailModal-' + id));
                modal.show();
            }

            // Show donation form and autofill geolocation
            function showDonationForm(id) {
                const modal = new bootstrap.Modal(document.getElementById('donationModal-' + id));
                modal.show();

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        pos => {
                            document.getElementById('latitude-' + id).value = pos.coords.latitude;
                            document.getElementById('longitude-' + id).value = pos.coords.longitude;
                        },
                        err => {
                            alert("Could not retrieve location. Please allow location access.");
                        }
                    );
                }
            }

            // Validate donation form input
            function validateDonationForm(id) {
                const form = document.querySelector(`#donationModal-${id} form`);
                const message = form.querySelector('textarea[name="message"]').value.trim();
                const address = form.querySelector('input[name="address"]').value.trim();

                if (message.split(/\s+/).length < 5) {
                    alert("Please enter at least 5 words in the message.");
                    return false;
                }

                if (address.split(/\s+/).length < 2) {
                    alert("Please enter a more detailed address.");
                    return false;
                }

                return true;
            }

            // Function to format the time as "X minutes ago", "X hours ago", etc.
            function timeAgo(dateTime) {
                const now = new Date();
                const diffInSeconds = Math.floor((now - new Date(dateTime)) / 1000);
                const diffInMinutes = Math.floor(diffInSeconds / 60);
                const diffInHours = Math.floor(diffInMinutes / 60);
                const diffInDays = Math.floor(diffInHours / 24);

                if (diffInSeconds < 60) {
                    return `${diffInSeconds} second${diffInSeconds > 1 ? 's' : ''} ago`;
                } else if (diffInMinutes < 60) {
                    return `${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;
                } else if (diffInHours < 24) {
                    return `${diffInHours} hour${diffInHours > 1 ? 's' : ''} ago`;
                } else if (diffInDays < 30) {
                    return `${diffInDays} day${diffInDays > 1 ? 's' : ''} ago`;
                } else {
                    return `${Math.floor(diffInDays / 30)} month${Math.floor(diffInDays / 30) > 1 ? 's' : ''} ago`;
                }
            }

            // Function to update all timeago elements on the page
            function updateTimeAgo() {
                document.querySelectorAll('.timeago').forEach(element => {
                    const time = element.getAttribute('data-time');
                    const formattedTime = timeAgo(time);
                    element.textContent = formattedTime;
                });
            }

            // Helper: Calculate distance using Haversine formula
            function calculateDistance(lat1, lon1, lat2, lon2) {
                const R = 6371; // Earth radius in km
                const dLat = (lat2 - lat1) * Math.PI / 180;
                const dLon = (lon2 - lon1) * Math.PI / 180;
                const a =
                    Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                    Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                    Math.sin(dLon / 2) * Math.sin(dLon / 2);
                const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
                return (R * c).toFixed(1); // distance in km
            }

            // Function to update all distances on the page based on the user's location
            function updateDistances(userLat, userLon) {
                document.querySelectorAll('.request-card').forEach(card => {
                    const destLat = parseFloat(card.dataset.lat);
                    const destLon = parseFloat(card.dataset.lng);

                    const distance = calculateDistance(userLat, userLon, destLat, destLon);
                    const displayEl = card.querySelector('.distance-display');
                    if (displayEl) {
                        displayEl.textContent = `üìç ${distance} km away`;
                    }
                });
            }

            // Fallback using IP location if geolocation is not available
            function fallbackToIP() {
                fetch('https://ipapi.co/json/')
                    .then(res => res.json())
                    .then(data => {
                        const lat = parseFloat(data.latitude);
                        const lon = parseFloat(data.longitude);
                        updateDistances(lat, lon);
                    })
                    .catch(err => {
                        document.querySelectorAll('.distance-display').forEach(el => {
                            el.textContent = 'üìç Location not available';
                        });
                    });
            }

            // Get user's location and update distances
            function fetchUserLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        pos => {
                            const lat = pos.coords.latitude;
                            const lon = pos.coords.longitude;
                            updateDistances(lat, lon);
                        },
                        err => {
                            console.warn("Geolocation error:", err.message);
                            fallbackToIP(); // Fallback to IP if geolocation fails
                        },
                        {
                            enableHighAccuracy: true,
                            timeout: 10000,
                            maximumAge: 0
                        }
                    );
                } else {
                    fallbackToIP(); // Fallback if geolocation is not available
                }
            }

            // Run these functions when the page is loaded
            document.addEventListener('DOMContentLoaded', () => {
                updateTimeAgo(); // Update time ago labels
                fetchUserLocation(); // Fetch user location for distance calculation
            });
        </script>




</body>

</html>