
<!-- Add Leaflet.js CDN to your HTML -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<!-- Favicon -->
<link href="/img/favicon.ico" rel="icon">

<!-- Google Web Fonts -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link
    href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Nunito:wght@600;700;800&family=Pacifico&display=swap"
    rel="stylesheet">
<!-- Include Font Awesome CDN in the <head> section of your HTML -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">


<!-- Icon Font Stylesheet -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

<!-- Libraries Stylesheet -->
<link href="/lib/animate/animate.min.css" rel="stylesheet">
<link href="/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
<link href="/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

<!-- Customized Bootstrap Stylesheet -->
<link href="/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="/css/success.css">

<!-- Template Stylesheet -->
<link href="/css/style.css" rel="stylesheet">

<!-- Include intl-tel-input CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css">
<!-- Include intl-tel-input JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>  
  



<!-- get the userr location -->
  <script>
    navigator.geolocation.getCurrentPosition(position => {
      const userLat = position.coords.latitude;
      const userLon = position.coords.longitude;
  
      const sortedDonations = donations
        .filter(d => d.status === 'claim')
        .map(d => ({
          ...d,
          distance: getDistanceKm(userLat, userLon, d.latitude, d.longitude),
          timeLeft: getTimeLeft(d.expiryTime)
        }))
        .sort((a, b) => a.distance - b.distance);
  
      const listContainer = document.getElementById('food-list');
      listContainer.innerHTML = '';
  
      sortedDonations.forEach(d => {
        const foodDetailsUrl = `/food/${d._id}`;
        const directionsUrl = `https://www.google.com/maps/dir/?api=1&origin=${userLat},${userLon}&destination=${d.latitude},${d.longitude}&travelmode=driving`;
        const imageUrl = d.photos?.[0] || 'https://via.placeholder.com/40';
  
        const item = document.createElement('div');
        item.className = "food-item";
        item.innerHTML = `
          <div class="food-left">
            <img src="${imageUrl}" class="food-img" alt="food">
            <div class="food-details">
              <strong>${d.subject}</strong><br>
              <small>${d.message || 'No note'}</small>
            </div>
          </div>
  
          <div class="food-distance">
            <small>${d.distance} km</small><br>
            <small>${d.timeLeft}</small>
          </div>
  
          <div class="food-actions">
            <a href="${foodDetailsUrl}" class="btn-plain" target="_blank">Details</a>
            <a href="${directionsUrl}" class="btn-outline" target="_blank">Map</a>
          </div>
        `;
        listContainer.appendChild(item);
      });
    });
  
    function getDistanceKm(lat1, lon1, lat2, lon2) {
      const R = 6371;
      const dLat = (lat2 - lat1) * Math.PI / 180;
      const dLon = (lon2 - lon1) * Math.PI / 180;
      const a = Math.sin(dLat / 2) ** 2 +
                Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
                Math.sin(dLon / 2) ** 2;
      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
      return (R * c).toFixed(2);
    }
  
    function getTimeLeft(expiryTime) {
      const now = new Date();
      const expiry = new Date(expiryTime);
      const diff = expiry - now;
  
      if (diff <= 0) return 'Expired';
      const mins = Math.floor((diff / 1000 / 60) % 60);
      const hrs = Math.floor(diff / 1000 / 60 / 60);
      return `${hrs}h ${mins}m`;
    }
  </script>
  